{"version":3,"sources":["components/preview/index.js","components/messages/index.js","components/Notes/Container.js","components/Notes/NotesList.js","components/Notes/Note.js","components/Notes/NoteForm.js","components/Alert/index.js","App.js","index.js"],"names":["Preview","props","className","children","Message","title","NotesContainer","NotesList","Note","noteClicked","active","onClick","NoteForm","formTitle","content","titleChanged","contentChanged","submitClicked","submitText","type","name","placeholder","value","onChange","rows","href","Alert","validationMessages","map","message","index","App","useState","notes","setNotes","setTitle","setContent","selectedNote","setSelecedtNote","creeting","setCreeting","editing","setEditing","validationErrors","setValidationErrors","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","saveToLocalStorage","key","validate","messageError","empty","push","length","setTimeout","changeTitleHandler","event","target","changeContentHandler","saveNoteHandler","note","id","Date","updateNotes","editNoteHandller","find","i","updateNoteHandler","findIndex","deleteNoteHandler","noteIndex","splice","item","noteDisplay","getPreview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64aff3bd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Preview = (props)=>(\r\n    <div className=\"preview-section\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default Preview","\r\nimport React from \"react\";\r\n\r\nconst Message =(props)=>(\r\n   <h2 className=\"center\">{props.title}</h2>\r\n);\r\n\r\nexport default Message;","import React from \"react\";\r\n\r\nconst NotesContainer = (props) =>(\r\n    <div className=\"notes-section\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default NotesContainer;","import React from \"react\";\r\n\r\nconst NotesList = (props) =>(\r\n    <ul className=\"notes-list\">\r\n        {props.children}\r\n    </ul>\r\n);\r\n\r\nexport default NotesList;","import React from \"react\";\r\n\r\nconst Note = (props) =>{\r\n    const {title, noteClicked, active} = props;\r\n    return(\r\n    <li className={`note-item ${active && 'active'}`} onClick={noteClicked}>{title}</li>\r\n    )\r\n};\r\n\r\nexport default Note;","import React from \"react\";\r\n\r\nconst NoteForm = (props)=>{\r\n    const {formTitle, title, content, titleChanged, contentChanged, submitClicked, submitText} = props;\r\n    return(\r\n        <div>\r\n            <h2>{formTitle}</h2>\r\n            <div>\r\n                <input\r\n                type = 'text'\r\n                name = 'title'\r\n                className = 'form-input mb-30'\r\n                placeholder = 'العنوان'\r\n                value= {title}\r\n                onChange= {titleChanged}  \r\n                />\r\n                <textarea\r\n                rows = '10'\r\n                name = 'content'\r\n                className=\"form-input\"\r\n                placeholder=\"النص\"\r\n                value={content}\r\n                onChange={contentChanged}\r\n                />\r\n                <a href=\"#\" className=\"button green\" onClick={submitClicked}>{submitText}</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteForm;","import React from \"react\";\r\n\r\n\r\nconst Alert = (props) =>(\r\n    <div className=\"alert-container\">\r\n        <ul>\r\n            {props.validationMessages.map((message, index)=> <li key={index}>{message}</li>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Preview from './components/preview';\nimport Message from './components/messages';\nimport NotesContainer from './components/Notes/Container';\nimport NotesList from './components/Notes/NotesList';\nimport Note from './components/Notes/Note';\nimport NoteForm from './components/Notes/NoteForm';\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedNote, setSelecedtNote] = useState(null);\n  const [creeting, setCreeting] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  // التخزين المحلي\n  useEffect(()=>{\n    if(localStorage.getItem('notes')){\n      setNotes(JSON.parse(localStorage.getItem('notes')));\n    }\n    else{\n      localStorage.setItem('notes', JSON.stringify([]));\n    }\n  });\n  const saveToLocalStorage = (key, value)=>{\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  // التحقق من إدخال عنوان ومحتوى الملاحظة\n const validate = ()=>{\n  const messageError =[];\n  let empty = true;\n  if(!title){\n    messageError.push(\"الرجاء إدخال عنوان الملاحظة\");\n    empty = false;\n  }\n  if(!content){\n    messageError.push(\"الرجاء إدخال محتوى الملاحظة\");\n    empty = false;\n  }\n  setValidationErrors(messageError);\n  return empty;\n }\n\n//  إخفاء رسائل التنبيه على إدخال عنوان ومحتوى الملاحظة الفارغة بعد 3 ثواني\nuseEffect (()=>{\n  if(validationErrors.length !== 0){\n    setTimeout(()=>{\n      setValidationErrors([])\n    }, 3000)\n  }\n},[validationErrors])\n\n\n  const addNoteHandeler = () => {\n    setCreeting(true);\n    setEditing(false);\n    setTitle('')\n    setContent('')\n  }\n\n  const changeTitleHandler = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const changeContentHandler = (event) => {\n    setContent(event.target.value)\n  }\n\n  const saveNoteHandler = () => {\n    if (!validate()) return;\n    const note = {\n      id: new Date(),\n      title: title,\n      content: content,\n    }\n    const updateNotes = [...notes, note];\n    saveToLocalStorage('notes', updateNotes );\n    setNotes(updateNotes);\n    setSelecedtNote(note.id);\n    setTitle('');\n    setContent('');\n\n\n  }\n\n  // اختيار ملاحظة \n  const selectNoteHandler = i => {\n    setSelecedtNote(i);\n    setEditing(false);\n    setCreeting(false);\n  }\n\n  //  إظهار نافذة تعديل الملاحظة\n  const editNoteHandller = () => {\n    const note = notes.find(i => i.id === selectedNote);\n    setEditing(true);\n    setTitle(note.title)\n    setContent(note.content)\n  };\n\n  // تعديل ملاحظة\n  const updateNoteHandler = () => {\n   if (!validate) return\n    const updateNotes = [...notes];\n    const noteIndex = notes.findIndex(i => i.id === selectedNote);\n    updateNotes[noteIndex] = {\n      id: selectedNote,\n      title: title,\n      content: content,\n    };\n    saveToLocalStorage('notes', updateNotes);\n    setNotes(updateNotes);\n    setEditing(false);\n    setTitle('')\n    setContent('')\n  };\n\n  // حذف ملاحظة\nconst deleteNoteHandler = ()=>{\n  \n  const noteIndex = notes.findIndex(i => i.id === selectedNote);\n  notes.splice(noteIndex, 1);\n  saveToLocalStorage('notes', notes);\n  setNotes(notes);\n  setSelecedtNote(null)\n\n}\n\n  const getAddNote = () => {\n    return (\n      <NoteForm\n        formTitle='ملاحظة جديدة'\n        title={title}\n        content={content}\n        titleChanged={changeTitleHandler}\n        contentChanged={changeContentHandler}\n        submitText=\"حفظ\"\n        submitClicked={saveNoteHandler}\n      />\n\n\n    );\n  };\n\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return <Message title=\"لا يوجد ملاحظة\" />\n    }\n\n    if (!selectedNote) {\n      return <Message title=\"الرجاء اختيار ملاحظة\" />\n    };\n    const note = notes.find(item => {\n      return item.id === selectedNote;\n    });\n\n    let noteDisplay = (\n      <div>\n        <h2>{note.title}</h2>\n        <p>{note.content}</p>\n      </div>\n    )\n\n\n    if (editing) {\n      noteDisplay = (\n        <NoteForm\n          formTitle='تعديل ملاحظة'\n          title={title}\n          content={content}\n          titleChanged={changeTitleHandler}\n          contentChanged={changeContentHandler}\n          submitText=\"تعديل\"\n          submitClicked={updateNoteHandler}\n        />\n      );\n    }\n\n\n\n    return (\n      <div>\n        {!editing &&\n          <div className=\"note-operations\">\n            <a href=\"#\" onClick={editNoteHandller}>\n              <i className=\"fa fa-pencil-alt\" />\n            </a>\n            <a href=\"#\" onClick={deleteNoteHandler}>\n              <i className=\"fa fa-trash\" />\n              \n            </a>\n          </div>\n        }\n        {noteDisplay}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <NotesContainer>\n        <NotesList>\n          {notes.map(note =>\n            <Note\n              key={note.id}\n              title={note.title}\n              noteClicked={() => selectNoteHandler(note.id)}\n              active={selectedNote === note.id}\n            />)}\n        </NotesList>\n        <button className=\"add-btn\" onClick={addNoteHandeler}>+</button>\n      </NotesContainer>\n      <Preview >{creeting ? getAddNote() : getPreview()}</Preview>\n      {validationErrors.length !==0 && <Alert validationMessages={validationErrors}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}